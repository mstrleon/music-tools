import os
import shutil
import mutagen.flac
import mutagen.mp3
import mutagen

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
source_folder = input('üìÅ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ c FLAC/MP3/AIFF-—Ñ–∞–π–ª–∞–º–∏: ').strip()
destination_folder = input('üìÇ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤: ').strip()
keyword = input('üîç –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö: ').strip().lower()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
os.makedirs(destination_folder, exist_ok=True)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
for filename in os.listdir(source_folder):
    filepath = os.path.join(source_folder, filename)
    
    if filename.lower().endswith('.flac'):
        try:
            audio = mutagen.flac.FLAC(filepath)
            comments = audio.get('comment', [])

            if any(keyword in comment.lower() for comment in comments):
                print(f'‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ "{keyword}" –≤ {filename} ‚Äî –ø–µ—Ä–µ–º–µ—â–∞–µ–º...')
                shutil.move(filepath, os.path.join(destination_folder, filename))

        except Exception as e:
            print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}')
    
    elif filename.lower().endswith('.mp3'):
        try:
            audio = mutagen.File(filepath)
            comments = []
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç–µ–≥–æ–≤
            if audio is not None:
                # ID3v2 COMM —Ñ—Ä–µ–π–º—ã
                if hasattr(audio, 'tags') and audio.tags:
                    for key in audio.tags:
                        if key.startswith('COMM'):
                            comments.extend([str(val) for val in audio.tags[key].text])
                    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–ª–µ comment
                    if 'comment' in audio.tags:
                        comments.extend(audio.tags['comment'])

            if any(keyword in comment.lower() for comment in comments):
                print(f'‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ "{keyword}" –≤ {filename} ‚Äî –ø–µ—Ä–µ–º–µ—â–∞–µ–º...')
                shutil.move(filepath, os.path.join(destination_folder, filename))

        except Exception as e:
            print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}')
    
    elif filename.lower().endswith(('.aiff', '.aif')):
        try:
            audio = mutagen.File(filepath)
            comments = []
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ AIFF —Ç–µ–≥–æ–≤
            if audio is not None and hasattr(audio, 'tags') and audio.tags:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID3 —Ç–µ–≥–∏ (AIFF –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å ID3)
                for key in audio.tags:
                    if key.startswith('COMM'):
                        comments.extend([str(val) for val in audio.tags[key].text])
                    if key == 'comment' or key == 'COMMENT':
                        val = audio.tags[key]
                        if isinstance(val, list):
                            comments.extend([str(v) for v in val])
                        else:
                            comments.append(str(val))

            if any(keyword in comment.lower() for comment in comments):
                print(f'‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–ª–æ–≤–æ "{keyword}" –≤ {filename} ‚Äî –ø–µ—Ä–µ–º–µ—â–∞–µ–º...')
                shutil.move(filepath, os.path.join(destination_folder, filename))

        except Exception as e:
            print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}')

print('üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.')